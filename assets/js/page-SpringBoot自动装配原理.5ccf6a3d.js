(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{662:function(t,o,r){"use strict";r.r(o);var n=r(1),s=Object(n.a)({},(function(){var t=this,o=t.$createElement,r=t._self._c||o;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"什么是-springboot-自动装配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是-springboot-自动装配"}},[t._v("#")]),t._v(" 什么是 SpringBoot 自动装配？")]),t._v(" "),r("p",[r("strong",[t._v("通过注解或者一些简单的配置就能在 Spring Boot 的帮助下实现某块功能。")])]),t._v(" "),r("blockquote",[r("p",[t._v("SpringBoot 定义了一套接口规范，这套规范规定：SpringBoot 在启动时会扫描外部引用 jar 包中的"),r("code",[t._v("META-INF/spring.factories")]),t._v("文件，将文件中配置的类型信息加载到 Spring 容器（此处涉及到 JVM 类加载机制与 Spring 的容器知识），并执行类中定义的各种操作。对于外部 jar 来说，只需要按照 SpringBoot 定义的标准，就能将自己的功能装置进 SpringBoot。")])])])}),[],!1,null,null,null);o.default=s.exports}}]);