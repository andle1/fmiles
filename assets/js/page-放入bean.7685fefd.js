(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{659:function(e,a,t){"use strict";t.r(a);var n=t(1),i=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"如何放入bean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何放入bean"}},[e._v("#")]),e._v(" 如何放入bean")]),e._v(" "),t("h2",{attrs:{id:"加载-bean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加载-bean"}},[e._v("#")]),e._v(" 加载 bean")]),e._v(" "),t("p",[e._v("这里介绍的是通过 xml 加载的方式。")]),e._v(" "),t("h3",{attrs:{id:"defaultlistablebeanfactory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#defaultlistablebeanfactory"}},[e._v("#")]),e._v(" DefaultListableBeanFactory")]),e._v(" "),t("p",[e._v("整个 bean 加载的核心部分。")]),e._v(" "),t("h3",{attrs:{id:"_2、xmlbeanfactory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、xmlbeanfactory"}},[e._v("#")]),e._v(" 2、XmlBeanFactory")]),e._v(" "),t("p",[e._v("DefaultListableBeanFactory 的子类，使用自定义的 xml 读取器 XmlBeanDefinitionReader，实现个性化的 BeanDefinitionReader。")]),e._v(" "),t("h4",{attrs:{id:"_2-1-resource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-resource"}},[e._v("#")]),e._v(" 2.1 Resource")]),e._v(" "),t("p",[e._v("继承 InputStreamSource。")]),e._v(" "),t("h4",{attrs:{id:"_2-2-beandefinition"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-beandefinition"}},[e._v("#")]),e._v(" 2.2 BeanDefinition")]),e._v(" "),t("p",[e._v("BeanDefinition 是一个接口，在 Spring 中有三种实现：RootBeanDefinition、ChildBeanDefinition、GenericBeanDefinition。三者均继承自AbstractBeanDefinition。")]),e._v(" "),t("p",[e._v("BeanDefinition  和 "),t("bean",[e._v(" 中的属性是一一对应的。")])],1),e._v(" "),t("p",[e._v("​\t\tSpring 通过 BeanDefinition 将配置文件中的 ＜bean> 配置信息转换为容器的内部表示，并将这些 BeanDefiniton 注册到 BeanDefinitonReistry Spring 容器的 BeanDefin tionRegistrγ 就像是 Spring 配置信息的内存数据库，主要是以 map 的形式保存，后续操作直接从 BeanDefinitionRegistry 中读取配置信息。")]),e._v(" "),t("h3",{attrs:{id:"_3、xmlbeandefinitionreader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、xmlbeandefinitionreader"}},[e._v("#")]),e._v(" 3、XmlBeanDefinitionReader")]),e._v(" "),t("p",[e._v("从 XML 文件读取配置文件。")]),e._v(" "),t("p",[e._v("在 Xml")])])}),[],!1,null,null,null);a.default=i.exports}}]);