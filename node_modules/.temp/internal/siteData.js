/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "fmiles",
  "description": "Java个人博客",
  "base": "/",
  "headTags": [
    [
      "link",
      {
        "rel": "manifest",
        "href": "/photo.jpg"
      }
    ],
    [
      "link",
      {
        "rel": "apple-touch-icon",
        "href": "/photo.jpg"
      }
    ],
    [
      "meta",
      {
        "name": "baidu-site-verification",
        "content": "code-IZvTs9l2OK"
      }
    ],
    [
      "script",
      {
        "src": "https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js"
      }
    ],
    [
      "script",
      {
        "src": "https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"
      }
    ],
    [
      "script",
      {
        "src": "https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js"
      }
    ],
    [
      "script",
      {
        "src": "https://cdn.jsdelivr.net/npm/@babel/standalone/babel.min.js"
      }
    ],
    [
      "script",
      {},
      "var _hmt = _hmt || [];\n      (function() {\n        var hm = document.createElement(\"script\");\n        hm.src = \"https://hm.baidu.com/hm.js?5dd2e8c97962d57b7b8fea1737c01743\";\n        var s = document.getElementsByTagName(\"script\")[0]; \n        s.parentNode.insertBefore(hm, s);\n      })();"
    ],
    [
      "link",
      {
        "rel": "alternate",
        "type": "application/atom+xml",
        "href": "https://fmiles.cn/atom.xml",
        "title": "fmiles Atom Feed"
      }
    ],
    [
      "link",
      {
        "rel": "alternate",
        "type": "application/json",
        "href": "https://fmiles.cn/feed.json",
        "title": "fmiles JSON Feed"
      }
    ],
    [
      "link",
      {
        "rel": "alternate",
        "type": "application/rss+xml",
        "href": "https://fmiles.cn/rss.xml",
        "title": "fmiles RSS Feed"
      }
    ],
    [
      "meta",
      {
        "name": "theme-color",
        "content": "#46bd87"
      }
    ],
    [
      "meta",
      {
        "name": "viewport",
        "content": "width=device-width, initial-scale=1.0, viewport-fit=cover"
      }
    ]
  ],
  "pages": [
    {
      "title": "这是文章主页",
      "frontmatter": {
        "icon": "creative",
        "title": "这是文章主页",
        "summary": "这里是主页",
        "meta": [
          {
            "property": "og:url",
            "content": "/home.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:title",
            "content": "这是文章主页"
          },
          {
            "property": "og:description",
            "content": "这里是主页"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/home.html",
      "relativePath": "home.md",
      "key": "v-10768be8",
      "path": "/home/",
      "readingTime": {
        "minutes": 0.02,
        "words": 5
      },
      "updateTime": "2022年3月3日 23:29",
      "updateTimeStamp": 1646321359000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 2
        }
      ]
    },
    {
      "frontmatter": {
        "summary": "熟练掌握 BIO,NIO,AIO 的基本概念以及一些常见问题是你准备面试的过程中不可或缺的一部分，另外这些知识点也是你学习 Netty 的基础。\rBIO,NIO,AIO 总结; \r1. BIO \\(Blocking I/O\\); \r1.1 传统 BIO; \r1.2 伪异步 IO; \r1.3 代码示例; \r1.4 总结; \r2. NIO \\(New I/O\\)",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/basis/BIO,NIO,AIO%E6%80%BB%E7%BB%93.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:description",
            "content": "熟练掌握 BIO,NIO,AIO 的基本概念以及一些常见问题是你准备面试的过程中不可或缺的一部分，另外这些知识点也是你学习 Netty 的基础。\rBIO,NIO,AIO 总结; \r1. BIO \\(Blocking I/O\\); \r1.1 传统 BIO; \r1.2 伪异步 IO; \r1.3 代码示例; \r1.4 总结; \r2. NIO \\(New I/O\\)"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/basis/BIO,NIO,AIO%E6%80%BB%E7%BB%93.html",
      "relativePath": "java/basis/BIO,NIO,AIO总结.md",
      "key": "v-2d1e813b",
      "path": "/java/basis/BIO,NIO,AIO%E6%80%BB%E7%BB%93/",
      "headers": [
        {
          "level": 2,
          "title": "1. BIO (Blocking I/O)",
          "slug": "_1-bio-blocking-i-o"
        },
        {
          "level": 3,
          "title": "1.1 传统 BIO",
          "slug": "_1-1-传统-bio"
        },
        {
          "level": 3,
          "title": "1.2 伪异步 IO",
          "slug": "_1-2-伪异步-io"
        },
        {
          "level": 3,
          "title": "1.3 代码示例",
          "slug": "_1-3-代码示例"
        },
        {
          "level": 3,
          "title": "1.4 总结",
          "slug": "_1-4-总结"
        },
        {
          "level": 2,
          "title": "2. NIO (New I/O)",
          "slug": "_2-nio-new-i-o"
        },
        {
          "level": 3,
          "title": "2.1 NIO 简介",
          "slug": "_2-1-nio-简介"
        },
        {
          "level": 3,
          "title": "2.2 NIO的特性/NIO与IO区别",
          "slug": "_2-2-nio的特性-nio与io区别"
        },
        {
          "level": 3,
          "title": "2.3  NIO 读数据和写数据方式",
          "slug": "_2-3-nio-读数据和写数据方式"
        },
        {
          "level": 3,
          "title": "2.4 NIO核心组件简单介绍",
          "slug": "_2-4-nio核心组件简单介绍"
        },
        {
          "level": 3,
          "title": "2.5 代码示例",
          "slug": "_2-5-代码示例"
        },
        {
          "level": 3,
          "title": "3. AIO (Asynchronous I/O)",
          "slug": "_3-aio-asynchronous-i-o"
        },
        {
          "level": 2,
          "title": "参考",
          "slug": "参考"
        }
      ],
      "readingTime": {
        "minutes": 15.66,
        "words": 4697
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "frontmatter": {
        "summary": "IO 模型这块确实挺难理解的，需要太多计算机底层知识。写这篇文章用了挺久，就非常希望能把我所知道的讲出来吧!希望朋友们能有收货！为了写这篇文章，还翻看了一下《UNIX 网络编程》这本书，太难了，我滴乖乖！心痛~ 个人能力有限。如果文章有任何需要补充/完善/修改的地方，欢迎在评论区指出，共同进步！ 前言 I/O 一直是很多小伙伴难以理解的一个知识点，这篇文章我",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/basis/IO%E6%A8%A1%E5%9E%8B.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:description",
            "content": "IO 模型这块确实挺难理解的，需要太多计算机底层知识。写这篇文章用了挺久，就非常希望能把我所知道的讲出来吧!希望朋友们能有收货！为了写这篇文章，还翻看了一下《UNIX 网络编程》这本书，太难了，我滴乖乖！心痛~ 个人能力有限。如果文章有任何需要补充/完善/修改的地方，欢迎在评论区指出，共同进步！ 前言 I/O 一直是很多小伙伴难以理解的一个知识点，这篇文章我"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/basis/IO%E6%A8%A1%E5%9E%8B.html",
      "relativePath": "java/basis/IO模型.md",
      "key": "v-2fe5fa3a",
      "path": "/java/basis/IO%E6%A8%A1%E5%9E%8B/",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "I/O",
          "slug": "i-o"
        },
        {
          "level": 3,
          "title": "何为 I/O?",
          "slug": "何为-i-o"
        },
        {
          "level": 3,
          "title": "有哪些常见的 IO 模型?",
          "slug": "有哪些常见的-io-模型"
        },
        {
          "level": 2,
          "title": "Java 中 3 种常见 IO 模型",
          "slug": "java-中-3-种常见-io-模型"
        },
        {
          "level": 3,
          "title": "BIO (Blocking I/O)",
          "slug": "bio-blocking-i-o"
        },
        {
          "level": 3,
          "title": "NIO (Non-blocking/New I/O)",
          "slug": "nio-non-blocking-new-i-o"
        },
        {
          "level": 3,
          "title": "AIO (Asynchronous I/O)",
          "slug": "aio-asynchronous-i-o"
        },
        {
          "level": 2,
          "title": "参考",
          "slug": "参考"
        }
      ],
      "readingTime": {
        "minutes": 6.69,
        "words": 2008
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "frontmatter": {
        "summary": "\" 本文首更于《从零开始手把手教你实现一个简单的RPC框架》 。\"\r1. 代理模式; \r2. 静态代理; \r3. 动态代理; \r3.1. JDK 动态代理机制; \r3.1.1. 介绍; \r3.1.2. JDK 动态代理类使用步骤; \r3.1.3. 代码示例; \r3.2. CGLIB 动态代理机制; \r3.2.1. 介绍; \r3.2.2. CGLIB 动态代理",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/basis/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:description",
            "content": "\" 本文首更于《从零开始手把手教你实现一个简单的RPC框架》 。\"\r1. 代理模式; \r2. 静态代理; \r3. 动态代理; \r3.1. JDK 动态代理机制; \r3.1.1. 介绍; \r3.1.2. JDK 动态代理类使用步骤; \r3.1.3. 代码示例; \r3.2. CGLIB 动态代理机制; \r3.2.1. 介绍; \r3.2.2. CGLIB 动态代理"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/basis/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3.html",
      "relativePath": "java/basis/代理模式详解.md",
      "key": "v-38b7d86b",
      "path": "/java/basis/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3/",
      "headers": [
        {
          "level": 2,
          "title": "1. 代理模式",
          "slug": "_1-代理模式"
        },
        {
          "level": 2,
          "title": "2. 静态代理",
          "slug": "_2-静态代理"
        },
        {
          "level": 2,
          "title": "3. 动态代理",
          "slug": "_3-动态代理"
        },
        {
          "level": 3,
          "title": "3.1. JDK 动态代理机制",
          "slug": "_3-1-jdk-动态代理机制"
        },
        {
          "level": 3,
          "title": "3.2. CGLIB 动态代理机制",
          "slug": "_3-2-cglib-动态代理机制"
        },
        {
          "level": 3,
          "title": "3.3. JDK 动态代理和 CGLIB 动态代理对比",
          "slug": "_3-3-jdk-动态代理和-cglib-动态代理对比"
        },
        {
          "level": 2,
          "title": "4. 静态代理和动态代理的对比",
          "slug": "_4-静态代理和动态代理的对比"
        },
        {
          "level": 2,
          "title": "5. 总结",
          "slug": "_5-总结"
        }
      ],
      "readingTime": {
        "minutes": 11.4,
        "words": 3421
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "frontmatter": {
        "summary": "final,static,this,super 关键字总结; \rfinal 关键字; \rstatic 关键字; \rthis 关键字; \rsuper 关键字; \r参考; \rstatic 关键字详解; \rstatic 关键字主要有以下四种使用场景; \r修饰成员变量和成员方法\\(常用\\); \r静态代码块; \r静态内部类; \r静态导包; \r补充内容; \r静态方法与非",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/basis/Java%E5%B8%B8%E8%A7%81%E5%85%B3%E9%94%AE%E5%AD%97%E6%80%BB%E7%BB%93.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:description",
            "content": "final,static,this,super 关键字总结; \rfinal 关键字; \rstatic 关键字; \rthis 关键字; \rsuper 关键字; \r参考; \rstatic 关键字详解; \rstatic 关键字主要有以下四种使用场景; \r修饰成员变量和成员方法\\(常用\\); \r静态代码块; \r静态内部类; \r静态导包; \r补充内容; \r静态方法与非"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/basis/Java%E5%B8%B8%E8%A7%81%E5%85%B3%E9%94%AE%E5%AD%97%E6%80%BB%E7%BB%93.html",
      "relativePath": "java/basis/Java常见关键字总结.md",
      "key": "v-bbb750de",
      "path": "/java/basis/Java%E5%B8%B8%E8%A7%81%E5%85%B3%E9%94%AE%E5%AD%97%E6%80%BB%E7%BB%93/",
      "headers": [
        {
          "level": 2,
          "title": "final 关键字",
          "slug": "final-关键字"
        },
        {
          "level": 2,
          "title": "static 关键字",
          "slug": "static-关键字"
        },
        {
          "level": 2,
          "title": "this 关键字",
          "slug": "this-关键字"
        },
        {
          "level": 2,
          "title": "super 关键字",
          "slug": "super-关键字"
        },
        {
          "level": 2,
          "title": "参考",
          "slug": "参考"
        },
        {
          "level": 2,
          "title": "static 关键字主要有以下四种使用场景",
          "slug": "static-关键字主要有以下四种使用场景"
        },
        {
          "level": 3,
          "title": "修饰成员变量和成员方法(常用)",
          "slug": "修饰成员变量和成员方法-常用"
        },
        {
          "level": 3,
          "title": "静态代码块",
          "slug": "静态代码块"
        },
        {
          "level": 3,
          "title": "静态内部类",
          "slug": "静态内部类"
        },
        {
          "level": 3,
          "title": "静态导包",
          "slug": "静态导包"
        },
        {
          "level": 2,
          "title": "补充内容",
          "slug": "补充内容"
        },
        {
          "level": 3,
          "title": "静态方法与非静态方法",
          "slug": "静态方法与非静态方法"
        },
        {
          "level": 3,
          "title": "static{}静态代码块与{}非静态代码块(构造代码块)",
          "slug": "static-静态代码块与-非静态代码块-构造代码块"
        },
        {
          "level": 3,
          "title": "参考",
          "slug": "参考-2"
        }
      ],
      "readingTime": {
        "minutes": 12.2,
        "words": 3659
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "frontmatter": {
        "summary": "1. 基础; \r1.1. 正确使用 equals 方法; \r1.2. 整型包装类值的比较; \r1.3. BigDecimal; \r1.3.1. BigDecimal 的用处; \r1.3.2. BigDecimal 的大小比较; \r1.3.3. BigDecimal 保留几位小数; \r1.3.4. BigDecimal 的使用注意事项; \r1.3.5. 总结;",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/basis/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%96%91%E9%9A%BE%E7%82%B9.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:description",
            "content": "1. 基础; \r1.1. 正确使用 equals 方法; \r1.2. 整型包装类值的比较; \r1.3. BigDecimal; \r1.3.1. BigDecimal 的用处; \r1.3.2. BigDecimal 的大小比较; \r1.3.3. BigDecimal 保留几位小数; \r1.3.4. BigDecimal 的使用注意事项; \r1.3.5. 总结;"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/basis/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%96%91%E9%9A%BE%E7%82%B9.html",
      "relativePath": "java/basis/Java基础知识疑难点.md",
      "key": "v-534ae918",
      "path": "/java/basis/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%96%91%E9%9A%BE%E7%82%B9/",
      "headers": [
        {
          "level": 2,
          "title": "1.1. 正确使用 equals 方法",
          "slug": "_1-1-正确使用-equals-方法"
        },
        {
          "level": 2,
          "title": "1.2. 整型包装类值的比较",
          "slug": "_1-2-整型包装类值的比较"
        },
        {
          "level": 2,
          "title": "1.3. BigDecimal",
          "slug": "_1-3-bigdecimal"
        },
        {
          "level": 3,
          "title": "1.3.1. BigDecimal 的用处",
          "slug": "_1-3-1-bigdecimal-的用处"
        },
        {
          "level": 3,
          "title": "1.3.2. BigDecimal 的大小比较",
          "slug": "_1-3-2-bigdecimal-的大小比较"
        },
        {
          "level": 3,
          "title": "1.3.3. BigDecimal 保留几位小数",
          "slug": "_1-3-3-bigdecimal-保留几位小数"
        },
        {
          "level": 3,
          "title": "1.3.4. BigDecimal 的使用注意事项",
          "slug": "_1-3-4-bigdecimal-的使用注意事项"
        },
        {
          "level": 3,
          "title": "1.3.5. 总结",
          "slug": "_1-3-5-总结"
        },
        {
          "level": 2,
          "title": "1.4. 基本数据类型与包装数据类型的使用标准",
          "slug": "_1-4-基本数据类型与包装数据类型的使用标准"
        },
        {
          "level": 2,
          "title": "2.1. Arrays.asList()使用指南",
          "slug": "_2-1-arrays-aslist-使用指南"
        },
        {
          "level": 3,
          "title": "2.1.1. 简介",
          "slug": "_2-1-1-简介"
        },
        {
          "level": 3,
          "title": "2.1.2. 《阿里巴巴Java 开发手册》对其的描述",
          "slug": "_2-1-2-《阿里巴巴java-开发手册》对其的描述"
        },
        {
          "level": 3,
          "title": "2.1.3. 使用时的注意事项总结",
          "slug": "_2-1-3-使用时的注意事项总结"
        },
        {
          "level": 3,
          "title": "2.1.4. 如何正确的将数组转换为ArrayList?",
          "slug": "_2-1-4-如何正确的将数组转换为arraylist"
        },
        {
          "level": 2,
          "title": "2.2. Collection.toArray()方法使用的坑&如何反转数组",
          "slug": "_2-2-collection-toarray-方法使用的坑-如何反转数组"
        },
        {
          "level": 2,
          "title": "2.3. 不要在 foreach 循环里进行元素的 remove/add 操作",
          "slug": "_2-3-不要在-foreach-循环里进行元素的-remove-add-操作"
        }
      ],
      "readingTime": {
        "minutes": 11.42,
        "words": 3426
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "title": "何为反射？",
      "frontmatter": {
        "summary": "何为反射？ 如果说大家研究过框架的底层原理或者咱们自己写过框架的话，一定对反射这个概念不陌生。 反射之所以被称为框架的灵魂，主要是因为它赋予了我们在运行时分析类以及执行类中方法的能力。 通过反射你可以获取任意一个类的所有属性和方法，你还可以调用这些方法和属性。 反射的应用场景了解么？ 像咱们平时大部分时候都是在写业务代码，很少会接触到直接使用反射机制的场景。",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/basis/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:title",
            "content": "何为反射？"
          },
          {
            "property": "og:description",
            "content": "何为反射？ 如果说大家研究过框架的底层原理或者咱们自己写过框架的话，一定对反射这个概念不陌生。 反射之所以被称为框架的灵魂，主要是因为它赋予了我们在运行时分析类以及执行类中方法的能力。 通过反射你可以获取任意一个类的所有属性和方法，你还可以调用这些方法和属性。 反射的应用场景了解么？ 像咱们平时大部分时候都是在写业务代码，很少会接触到直接使用反射机制的场景。"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/basis/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6.html",
      "relativePath": "java/basis/反射机制.md",
      "key": "v-c6ab738e",
      "path": "/java/basis/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/",
      "headers": [
        {
          "level": 2,
          "title": "何为反射？",
          "slug": "何为反射"
        },
        {
          "level": 2,
          "title": "反射的应用场景了解么？",
          "slug": "反射的应用场景了解么"
        },
        {
          "level": 2,
          "title": "谈谈反射机制的优缺点",
          "slug": "谈谈反射机制的优缺点"
        },
        {
          "level": 2,
          "title": "反射实战",
          "slug": "反射实战"
        },
        {
          "level": 3,
          "title": "获取 Class 对象的四种方式",
          "slug": "获取-class-对象的四种方式"
        },
        {
          "level": 3,
          "title": "反射的一些基本操作",
          "slug": "反射的一些基本操作"
        }
      ],
      "readingTime": {
        "minutes": 4.12,
        "words": 1235
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "frontmatter": {
        "summary": "\" 最近重看 Java 枚举，看到这篇觉得还不错的文章，于是简单翻译和完善了一些内容，分享给大家，希望你们也能有所收获。另外，不要忘了文末还有补充哦！\"\r\"\"\r\" ps: 这里发一篇枚举的文章，也是因为后面要发一篇非常实用的关于 SpringBoot 全局异常处理的比较好的实践，里面就用到了枚举。\"\r\"\"\r\" 这篇文章由 JavaGuide 翻译，公众号: ",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/basis/%E7%94%A8%E5%A5%BDJava%E4%B8%AD%E7%9A%84%E6%9E%9A%E4%B8%BE%E7%9C%9F%E7%9A%84%E6%B2%A1%E6%9C%89%E9%82%A3%E4%B9%88%E7%AE%80%E5%8D%95.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:description",
            "content": "\" 最近重看 Java 枚举，看到这篇觉得还不错的文章，于是简单翻译和完善了一些内容，分享给大家，希望你们也能有所收获。另外，不要忘了文末还有补充哦！\"\r\"\"\r\" ps: 这里发一篇枚举的文章，也是因为后面要发一篇非常实用的关于 SpringBoot 全局异常处理的比较好的实践，里面就用到了枚举。\"\r\"\"\r\" 这篇文章由 JavaGuide 翻译，公众号: "
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/basis/%E7%94%A8%E5%A5%BDJava%E4%B8%AD%E7%9A%84%E6%9E%9A%E4%B8%BE%E7%9C%9F%E7%9A%84%E6%B2%A1%E6%9C%89%E9%82%A3%E4%B9%88%E7%AE%80%E5%8D%95.html",
      "relativePath": "java/basis/用好Java中的枚举真的没有那么简单.md",
      "key": "v-37f69f98",
      "path": "/java/basis/%E7%94%A8%E5%A5%BDJava%E4%B8%AD%E7%9A%84%E6%9E%9A%E4%B8%BE%E7%9C%9F%E7%9A%84%E6%B2%A1%E6%9C%89%E9%82%A3%E4%B9%88%E7%AE%80%E5%8D%95/",
      "headers": [
        {
          "level": 2,
          "title": "1.概览",
          "slug": "_1-概览"
        },
        {
          "level": 2,
          "title": "2.自定义枚举方法",
          "slug": "_2-自定义枚举方法"
        },
        {
          "level": 2,
          "title": "3.使用 == 比较枚举类型",
          "slug": "_3-使用-比较枚举类型"
        },
        {
          "level": 2,
          "title": "4.在 switch 语句中使用枚举类型",
          "slug": "_4-在-switch-语句中使用枚举类型"
        },
        {
          "level": 2,
          "title": "5.枚举类型的属性,方法和构造函数",
          "slug": "_5-枚举类型的属性-方法和构造函数"
        },
        {
          "level": 2,
          "title": "6.EnumSet and EnumMap",
          "slug": "_6-enumset-and-enummap"
        },
        {
          "level": 3,
          "title": "6.1. EnumSet",
          "slug": "_6-1-enumset"
        },
        {
          "level": 3,
          "title": "6.2. EnumMap",
          "slug": "_6-2-enummap"
        },
        {
          "level": 2,
          "title": "7. 通过枚举实现一些设计模式",
          "slug": "_7-通过枚举实现一些设计模式"
        },
        {
          "level": 3,
          "title": "7.1 单例模式",
          "slug": "_7-1-单例模式"
        },
        {
          "level": 3,
          "title": "7.2 策略模式",
          "slug": "_7-2-策略模式"
        },
        {
          "level": 2,
          "title": "8. Java 8 与枚举",
          "slug": "_8-java-8-与枚举"
        },
        {
          "level": 2,
          "title": "9. Enum 类型的 JSON 表现形式",
          "slug": "_9-enum-类型的-json-表现形式"
        },
        {
          "level": 2,
          "title": "10.总结",
          "slug": "_10-总结"
        },
        {
          "level": 2,
          "title": "11. 补充",
          "slug": "_11-补充"
        }
      ],
      "readingTime": {
        "minutes": 9.35,
        "words": 2804
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "frontmatter": {
        "summary": "1. Java 基本功; \r1.1. Java 入门（基础概念与常识）; \r1.1.1. Java 语言有哪些特点?; \r1.1.2. 关于 JVM JDK 和 JRE 最详细通俗的解答; \r1.1.2.1. JVM; \r1.1.2.2. JDK 和 JRE; \r1.1.3. Oracle JDK 和 OpenJDK 的对比; \r1.1.4. Java 和 ",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/basis/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:description",
            "content": "1. Java 基本功; \r1.1. Java 入门（基础概念与常识）; \r1.1.1. Java 语言有哪些特点?; \r1.1.2. 关于 JVM JDK 和 JRE 最详细通俗的解答; \r1.1.2.1. JVM; \r1.1.2.2. JDK 和 JRE; \r1.1.3. Oracle JDK 和 OpenJDK 的对比; \r1.1.4. Java 和 "
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/basis/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html",
      "relativePath": "java/basis/Java基础知识.md",
      "key": "v-947cb6a0",
      "path": "/java/basis/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",
      "headers": [
        {
          "level": 2,
          "title": "1. Java 基本功",
          "slug": "_1-java-基本功"
        },
        {
          "level": 3,
          "title": "1.1. Java 入门（基础概念与常识）",
          "slug": "_1-1-java-入门-基础概念与常识"
        },
        {
          "level": 3,
          "title": "1.2. Java 语法",
          "slug": "_1-2-java-语法"
        },
        {
          "level": 3,
          "title": "1.3. 基本数据类型",
          "slug": "_1-3-基本数据类型"
        },
        {
          "level": 3,
          "title": "1.4. 方法（函数）",
          "slug": "_1-4-方法-函数"
        },
        {
          "level": 2,
          "title": "2. Java 面向对象",
          "slug": "_2-java-面向对象"
        },
        {
          "level": 3,
          "title": "2.1. 类和对象",
          "slug": "_2-1-类和对象"
        },
        {
          "level": 3,
          "title": "2.2. 面向对象三大特征",
          "slug": "_2-2-面向对象三大特征"
        },
        {
          "level": 3,
          "title": "2.3. 修饰符",
          "slug": "_2-3-修饰符"
        },
        {
          "level": 3,
          "title": "2.4. 其它重要知识点",
          "slug": "_2-4-其它重要知识点"
        },
        {
          "level": 2,
          "title": "3. Java 核心技术",
          "slug": "_3-java-核心技术"
        },
        {
          "level": 3,
          "title": "3.1. 反射机制",
          "slug": "_3-1-反射机制"
        },
        {
          "level": 3,
          "title": "3.2. 异常",
          "slug": "_3-2-异常"
        },
        {
          "level": 3,
          "title": "3.3. 多线程",
          "slug": "_3-3-多线程"
        },
        {
          "level": 3,
          "title": "3.4. 文件与 I\\O 流",
          "slug": "_3-4-文件与-i-o-流"
        },
        {
          "level": 2,
          "title": "4. 参考",
          "slug": "_4-参考"
        }
      ],
      "readingTime": {
        "minutes": 67.08,
        "words": 20125
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "title": "1. ArrayList 简介",
      "frontmatter": {
        "summary": "1. ArrayList 简介 ArrayList 的底层是数组队列，相当于动态数组。与 Java 中的数组相比，它的容量能动态增长。在添加大量元素前，应用程序可以使用ensureCapacity操作来增加 ArrayList 实例的容量。这可以减少递增式再分配的数量。 ArrayList继承于 AbstractList ，实现了 List, RandomA",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/collection/ArrayList%E6%BA%90%E7%A0%81+%E6%89%A9%E5%AE%B9%E6%9C%BA%E5%88%B6%E5%88%86%E6%9E%90.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:title",
            "content": "1. ArrayList 简介"
          },
          {
            "property": "og:description",
            "content": "1. ArrayList 简介 ArrayList 的底层是数组队列，相当于动态数组。与 Java 中的数组相比，它的容量能动态增长。在添加大量元素前，应用程序可以使用ensureCapacity操作来增加 ArrayList 实例的容量。这可以减少递增式再分配的数量。 ArrayList继承于 AbstractList ，实现了 List, RandomA"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/collection/ArrayList%E6%BA%90%E7%A0%81+%E6%89%A9%E5%AE%B9%E6%9C%BA%E5%88%B6%E5%88%86%E6%9E%90.html",
      "relativePath": "java/collection/ArrayList源码+扩容机制分析.md",
      "key": "v-17033ffd",
      "path": "/java/collection/ArrayList%E6%BA%90%E7%A0%81+%E6%89%A9%E5%AE%B9%E6%9C%BA%E5%88%B6%E5%88%86%E6%9E%90/",
      "headers": [
        {
          "level": 2,
          "title": "1. ArrayList 简介",
          "slug": "_1-arraylist-简介"
        },
        {
          "level": 3,
          "title": "1.1. Arraylist 和 Vector 的区别?",
          "slug": "_1-1-arraylist-和-vector-的区别"
        },
        {
          "level": 3,
          "title": "1.2. Arraylist 与 LinkedList 区别?",
          "slug": "_1-2-arraylist-与-linkedlist-区别"
        },
        {
          "level": 2,
          "title": "2. ArrayList 核心源码解读",
          "slug": "_2-arraylist-核心源码解读"
        },
        {
          "level": 2,
          "title": "3. ArrayList 扩容机制分析",
          "slug": "_3-arraylist-扩容机制分析"
        },
        {
          "level": 3,
          "title": "3.1. 先从 ArrayList 的构造函数说起",
          "slug": "_3-1-先从-arraylist-的构造函数说起"
        },
        {
          "level": 3,
          "title": "3.2. 一步一步分析 ArrayList 扩容机制",
          "slug": "_3-2-一步一步分析-arraylist-扩容机制"
        },
        {
          "level": 3,
          "title": "3.3. System.arraycopy() 和 Arrays.copyOf()方法",
          "slug": "_3-3-system-arraycopy-和-arrays-copyof-方法"
        },
        {
          "level": 3,
          "title": "3.4. ensureCapacity方法",
          "slug": "_3-4-ensurecapacity方法"
        }
      ],
      "readingTime": {
        "minutes": 21.27,
        "words": 6381
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "frontmatter": {
        "summary": "\" 本文来自公众号：末读代码的投稿，原文地址：https://mp.weixin.qq.com/s/AHWzboztt53ZfFZmsSnMSw 。\" 上一篇文章介绍了 HashMap 源码，反响不错，也有很多同学发表了自己的观点，这次又来了，这次是 ConcurrentHashMap 了，作为线程安全的HashMap ，它的使用频率也是很高。那么它的存储结",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/collection/ConcurrentHashMap%E6%BA%90%E7%A0%81+%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:description",
            "content": "\" 本文来自公众号：末读代码的投稿，原文地址：https://mp.weixin.qq.com/s/AHWzboztt53ZfFZmsSnMSw 。\" 上一篇文章介绍了 HashMap 源码，反响不错，也有很多同学发表了自己的观点，这次又来了，这次是 ConcurrentHashMap 了，作为线程安全的HashMap ，它的使用频率也是很高。那么它的存储结"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/collection/ConcurrentHashMap%E6%BA%90%E7%A0%81+%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90.html",
      "relativePath": "java/collection/ConcurrentHashMap源码+底层数据结构分析.md",
      "key": "v-399347fd",
      "path": "/java/collection/ConcurrentHashMap%E6%BA%90%E7%A0%81+%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/",
      "headers": [
        {
          "level": 2,
          "title": "1. ConcurrentHashMap 1.7",
          "slug": "_1-concurrenthashmap-1-7"
        },
        {
          "level": 3,
          "title": "1. 存储结构",
          "slug": "_1-存储结构"
        },
        {
          "level": 3,
          "title": "2. 初始化",
          "slug": "_2-初始化"
        },
        {
          "level": 3,
          "title": "3. put",
          "slug": "_3-put"
        },
        {
          "level": 3,
          "title": "4. 扩容 rehash",
          "slug": "_4-扩容-rehash"
        },
        {
          "level": 3,
          "title": "5. get",
          "slug": "_5-get"
        },
        {
          "level": 2,
          "title": "2. ConcurrentHashMap 1.8",
          "slug": "_2-concurrenthashmap-1-8"
        },
        {
          "level": 3,
          "title": "1. 存储结构",
          "slug": "_1-存储结构-2"
        },
        {
          "level": 3,
          "title": "2. 初始化 initTable",
          "slug": "_2-初始化-inittable"
        },
        {
          "level": 3,
          "title": "3. put",
          "slug": "_3-put-2"
        },
        {
          "level": 3,
          "title": "4. get",
          "slug": "_4-get"
        },
        {
          "level": 2,
          "title": "3.  总结",
          "slug": "_3-总结"
        }
      ],
      "readingTime": {
        "minutes": 14.02,
        "words": 4207
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "frontmatter": {
        "summary": "HashMap 简介; \r底层数据结构分析; \rJDK1.8 之前; \rJDK1.8 之后; \rHashMap 源码分析; \r构造方法; \rput 方法; \rget 方法; \rresize 方法; \rHashMap 常用方法测试; \r\" 感谢 changfubai 对本文的改进做出的贡献！\" HashMap 简介 HashMap 主要用来存放键值对，它基于哈",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/collection/HashMap(JDK1.8)%E6%BA%90%E7%A0%81+%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:description",
            "content": "HashMap 简介; \r底层数据结构分析; \rJDK1.8 之前; \rJDK1.8 之后; \rHashMap 源码分析; \r构造方法; \rput 方法; \rget 方法; \rresize 方法; \rHashMap 常用方法测试; \r\" 感谢 changfubai 对本文的改进做出的贡献！\" HashMap 简介 HashMap 主要用来存放键值对，它基于哈"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/collection/HashMap(JDK1.8)%E6%BA%90%E7%A0%81+%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90.html",
      "relativePath": "java/collection/HashMap(JDK1.8)源码+底层数据结构分析.md",
      "key": "v-4d4e08ce",
      "path": "/java/collection/HashMap(JDK1.8)%E6%BA%90%E7%A0%81+%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/",
      "headers": [
        {
          "level": 2,
          "title": "HashMap 简介",
          "slug": "hashmap-简介"
        },
        {
          "level": 2,
          "title": "底层数据结构分析",
          "slug": "底层数据结构分析"
        },
        {
          "level": 3,
          "title": "JDK1.8 之前",
          "slug": "jdk1-8-之前"
        },
        {
          "level": 3,
          "title": "JDK1.8 之后",
          "slug": "jdk1-8-之后"
        },
        {
          "level": 2,
          "title": "HashMap 源码分析",
          "slug": "hashmap-源码分析"
        },
        {
          "level": 3,
          "title": "构造方法",
          "slug": "构造方法"
        },
        {
          "level": 3,
          "title": "put 方法",
          "slug": "put-方法"
        },
        {
          "level": 3,
          "title": "get 方法",
          "slug": "get-方法"
        },
        {
          "level": 3,
          "title": "resize 方法",
          "slug": "resize-方法"
        },
        {
          "level": 2,
          "title": "HashMap 常用方法测试",
          "slug": "hashmap-常用方法测试"
        }
      ],
      "readingTime": {
        "minutes": 13.33,
        "words": 3998
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "/hero.png",
        "heroText": "Hero 标题",
        "tagline": "Hero 副标题",
        "actionText": "快速上手 →",
        "actionLink": "/zh/guide/",
        "features": [
          {
            "title": "简洁至上",
            "details": "以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。"
          },
          {
            "title": "Vue驱动",
            "details": "享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。"
          },
          {
            "title": "高性能",
            "details": "VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。"
          }
        ],
        "footer": "MIT Licensed | Copyright © 2018-present Evan Yzezhzh",
        "summary": "123344则回应",
        "meta": [
          {
            "property": "og:url",
            "content": "/"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:title",
            "content": "Home"
          },
          {
            "property": "og:description",
            "content": "123344则回应"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/",
      "relativePath": "readme.md",
      "key": "v-1ed492c1",
      "path": "/",
      "readingTime": {
        "minutes": 0.01,
        "words": 4
      },
      "contributors": []
    },
    {
      "frontmatter": {
        "summary": "简介; \r内部结构分析; \rLinkedList源码分析; \r构造方法; \r添加（add）方法; \r根据位置取数据的方法; \r根据对象得到索引的方法; \r检查链表是否包含某对象的方法：; \r删除（remove/pop）方法; \rLinkedList类常用方法测试：; 简介 LinkedList是一个实现了List接口和Deque接口的双端链表。 Linked",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/collection/LinkedList%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:description",
            "content": "简介; \r内部结构分析; \rLinkedList源码分析; \r构造方法; \r添加（add）方法; \r根据位置取数据的方法; \r根据对象得到索引的方法; \r检查链表是否包含某对象的方法：; \r删除（remove/pop）方法; \rLinkedList类常用方法测试：; 简介 LinkedList是一个实现了List接口和Deque接口的双端链表。 Linked"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/java/collection/LinkedList%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html",
      "relativePath": "java/collection/LinkedList源码分析.md",
      "key": "v-28baf734",
      "path": "/java/collection/LinkedList%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/",
      "headers": [
        {
          "level": 2,
          "title": "",
          "slug": "简介"
        },
        {
          "level": 2,
          "title": "",
          "slug": "内部结构分析"
        },
        {
          "level": 2,
          "title": "",
          "slug": "linkedlist源码分析"
        },
        {
          "level": 3,
          "title": "",
          "slug": "构造方法"
        },
        {
          "level": 3,
          "title": "",
          "slug": "add方法"
        },
        {
          "level": 3,
          "title": "",
          "slug": "根据位置取数据的方法"
        },
        {
          "level": 3,
          "title": "",
          "slug": "根据对象得到索引的方法"
        },
        {
          "level": 3,
          "title": "",
          "slug": "检查链表是否包含某对象的方法"
        },
        {
          "level": 3,
          "title": "",
          "slug": "删除方法"
        },
        {
          "level": 2,
          "title": "",
          "slug": "linkedlist类常用方法测试"
        }
      ],
      "readingTime": {
        "minutes": 10.49,
        "words": 3147
      },
      "updateTime": "2022年3月3日 21:05",
      "updateTimeStamp": 1646312745000,
      "createTime": "2022年3月3日 21:05",
      "createTimeStamp": 1646312745000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "title": "垃圾回收",
      "frontmatter": {
        "category": "Java",
        "tag": [
          "Jvm"
        ],
        "summary": "垃圾回收",
        "meta": [
          {
            "property": "og:url",
            "content": "/java/jvm/gc/gc.html"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:title",
            "content": "垃圾回收"
          },
          {
            "property": "og:description",
            "content": "垃圾回收"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          },
          {
            "property": "article:tag",
            "content": "Jvm"
          }
        ]
      },
      "regularPath": "/java/jvm/gc/gc.html",
      "relativePath": "java/jvm/gc/gc.md",
      "key": "v-322338ea",
      "path": "/java/jvm/gc/gc/",
      "readingTime": {
        "minutes": 0.01,
        "words": 4
      },
      "updateTime": "2022年3月3日 21:48",
      "updateTimeStamp": 1646315299000,
      "createTime": "2022年3月3日 21:48",
      "createTimeStamp": 1646315299000,
      "contributors": [
        {
          "name": "andle1",
          "email": "2208174198@qq.com",
          "commits": 1
        }
      ]
    },
    {
      "frontmatter": {
        "layout": "Blog",
        "summary": "",
        "meta": [
          {
            "property": "og:url",
            "content": "/article/"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:type",
            "content": "website"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/article/",
      "key": "v-6453f364",
      "path": "/article/",
      "readingTime": {
        "minutes": 0,
        "words": 0
      }
    },
    {
      "frontmatter": {
        "layout": "Blog",
        "summary": "",
        "meta": [
          {
            "property": "og:url",
            "content": "/star/"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/star/",
      "key": "v-4340f7e8",
      "path": "/star/",
      "readingTime": {
        "minutes": 0,
        "words": 0
      }
    },
    {
      "frontmatter": {
        "layout": "Blog",
        "summary": "",
        "meta": [
          {
            "property": "og:url",
            "content": "/encrypt/"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/encrypt/",
      "key": "v-7d484ebf",
      "path": "/encrypt/",
      "readingTime": {
        "minutes": 0,
        "words": 0
      }
    },
    {
      "frontmatter": {
        "layout": "Blog",
        "summary": "",
        "meta": [
          {
            "property": "og:url",
            "content": "/slide/"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:type",
            "content": "article"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/slide/",
      "key": "v-2470be33",
      "path": "/slide/",
      "readingTime": {
        "minutes": 0,
        "words": 0
      }
    },
    {
      "frontmatter": {
        "layout": "Blog",
        "summary": "",
        "meta": [
          {
            "property": "og:url",
            "content": "/timeline/"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:type",
            "content": "website"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/timeline/",
      "key": "v-6319eb4e",
      "path": "/timeline/",
      "readingTime": {
        "minutes": 0,
        "words": 0
      }
    },
    {
      "frontmatter": {
        "layout": "Blog",
        "title": "Tag",
        "summary": "",
        "meta": [
          {
            "property": "og:url",
            "content": "/tag/"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:type",
            "content": "website"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/tag/",
      "key": "v-b1564aac",
      "path": "/tag/",
      "readingTime": {
        "minutes": 0,
        "words": 0
      }
    },
    {
      "frontmatter": {
        "layout": "Blog",
        "title": "Category",
        "summary": "",
        "meta": [
          {
            "property": "og:url",
            "content": "/category/"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:type",
            "content": "website"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/category/",
      "key": "v-28e6393c",
      "path": "/category/",
      "readingTime": {
        "minutes": 0,
        "words": 0
      }
    },
    {
      "frontmatter": {
        "layout": "Blog",
        "title": "Jvm Tag",
        "summary": "",
        "meta": [
          {
            "property": "og:url",
            "content": "/tag/Jvm/"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:type",
            "content": "website"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/tag/Jvm/",
      "key": "v-32523d10",
      "path": "/tag/Jvm/",
      "readingTime": {
        "minutes": 0,
        "words": 0
      }
    },
    {
      "frontmatter": {
        "layout": "Blog",
        "title": "Java Category",
        "summary": "",
        "meta": [
          {
            "property": "og:url",
            "content": "/category/Java/"
          },
          {
            "property": "og:site_name",
            "content": "fmiles"
          },
          {
            "property": "og:type",
            "content": "website"
          },
          {
            "property": "og:locale",
            "content": "zh-CN"
          },
          {
            "name": "twitter:card",
            "content": "summary_large_image"
          },
          {
            "name": "twitter:image:alt",
            "content": "fmiles"
          },
          {
            "property": "article:author",
            "content": "siyue"
          }
        ]
      },
      "regularPath": "/category/Java/",
      "key": "v-25b8d671",
      "path": "/category/Java/",
      "readingTime": {
        "minutes": 0,
        "words": 0
      }
    }
  ],
  "themeConfig": {
    "logo": "/logo.png",
    "hostname": "https://fmiles.cn/",
    "author": "siyue",
    "repo": "https://github.com/andle1/fmiles",
    "editLinks": true,
    "docsDir": "docs",
    "seo": true,
    "nav": [
      {
        "text": "主页",
        "icon": "java",
        "link": "/home"
      }
    ],
    "sidebar": {
      "/": [
        {
          "title": "Java",
          "icon": "java",
          "prefix": "java/",
          "children": [
            {
              "title": "基础",
              "prefix": "basis/",
              "children": []
            },
            {
              "title": "容器",
              "prefix": "collection/",
              "children": []
            },
            {
              "title": "并发编程",
              "prefix": "concurrent/",
              "children": [
                "java-concurrent-questions-01",
                "java-concurrent-questions-02",
                {
                  "title": "重要知识点",
                  "children": [
                    "java-thread-pool-summary",
                    "java-thread-pool-best-practices",
                    "java-concurrent-collections",
                    "aqs",
                    "reentrantlock",
                    "atomic-classes",
                    "threadlocal",
                    "completablefuture-intro"
                  ]
                }
              ]
            },
            {
              "title": "JVM",
              "prefix": "jvm/",
              "children": [
                {
                  "title": "垃圾回收",
                  "prefix": "gc/",
                  "children": [
                    "gc"
                  ]
                },
                {
                  "title": "字节码",
                  "prefix": "bytecode/",
                  "children": []
                },
                {
                  "title": "类加载器",
                  "prefix": "classloader/",
                  "children": []
                },
                {
                  "title": "内存",
                  "prefix": "memory/",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    "blog": {
      "sidebarDisplay": "mobile",
      "links": {
        "Github": "https://github.com/andle1",
        "Gitee": "https://gitee.com/andle1"
      }
    },
    "footer": {
      "display": true,
      "content": "<a href=\"https://beian.miit.gov.cn/\" target=\"_blank\">皖ICP备19004457号</a>"
    },
    "copyright": {
      "status": "global"
    },
    "git": {
      "timezone": "Asia/Shanghai"
    },
    "mdEnhance": {
      "enableAll": false,
      "presentation": {
        "plugins": [
          "highlight",
          "math",
          "search",
          "notes",
          "zoom",
          "anything",
          "audio",
          "chalkboard"
        ]
      }
    },
    "favicon": "/favicon.ico",
    "cachePic": false,
    "cacheHTML": false,
    "apple": {
      "icon": "/assets/icon/apple-icon-152.png",
      "statusBarColor": "black"
    },
    "msTile": {
      "image": "/assets/icon/ms-icon-144.png",
      "color": "#ffffff"
    },
    "manifest": {
      "icons": [
        {
          "src": "/assets/icon/chrome-mask-512.png",
          "sizes": "512x512",
          "purpose": "maskable",
          "type": "image/png"
        },
        {
          "src": "/assets/icon/chrome-mask-192.png",
          "sizes": "192x192",
          "purpose": "maskable",
          "type": "image/png"
        },
        {
          "src": "/assets/icon/chrome-512.png",
          "sizes": "512x512",
          "type": "image/png"
        },
        {
          "src": "/assets/icon/chrome-192.png",
          "sizes": "192x192",
          "type": "image/png"
        }
      ],
      "shortcuts": [
        {
          "name": "Guide",
          "short_name": "Guide",
          "url": "/guide/",
          "icons": [
            {
              "src": "/assets/icon/guide-maskable.png",
              "sizes": "192x192",
              "purpose": "maskable",
              "type": "image/png"
            },
            {
              "src": "/assets/icon/guide-monochrome.png",
              "sizes": "192x192",
              "purpose": "monochrome",
              "type": "image/png"
            }
          ]
        }
      ]
    },
    "locales": {
      "/": {
        "lang": "zh-CN",
        "selectText": "选择语言",
        "label": "简体中文",
        "meta": {
          "contributor": "贡献者",
          "editLink": "编辑此页",
          "updateTime": "上次编辑于"
        },
        "themeColor": {
          "themeColor": "主题色",
          "themeMode": "主题模式"
        },
        "encrypt": {
          "title": "请输入密码",
          "errorHint": "请输入正确密码"
        },
        "error404": {
          "hint": [
            "这里什么也没有",
            "我们是怎么来到这儿的？",
            "这 是 四 零 四 !",
            "看起来你访问了一个失效的链接"
          ],
          "back": "返回上一页",
          "home": "带我回家"
        },
        "blog": {
          "article": "文章",
          "articleList": "文章列表",
          "category": "分类",
          "tag": "标签",
          "timeline": "时间轴",
          "timelineText": "昨日不在",
          "allText": "全部",
          "intro": "个人介绍",
          "star": "收藏",
          "slides": "幻灯片",
          "encrypt": "加密"
        }
      }
    },
    "sidebarDepth": 2,
    "iconPrefix": "icon-"
  },
  "locales": {
    "/": {
      "lang": "zh-CN",
      "path": "/"
    }
  }
}