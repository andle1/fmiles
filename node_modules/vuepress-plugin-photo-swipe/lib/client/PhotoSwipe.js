import Vue from "vue";
let images;
const locales = PHOTO_SWIPE_LOCALES;
export default Vue.extend({
    name: "PhotoSwipe",
    computed: {
        locales() {
            return locales[this.$localePath || "/"];
        },
    },
    watch: {
        $route() {
            this.initPhotoSwipe();
        },
    },
    mounted() {
        this.initPhotoSwipe();
    },
    methods: {
        initPhotoSwipe() {
            const pswp = document.querySelector(".pswp");
            void Promise.all([
                import(/* webpackChunkName: "photo-swipe" */ "photoswipe"),
                import(
                /* webpackChunkName: "photo-swipe" */ "photoswipe/dist/photoswipe-ui-default"),
                new Promise((resolve) => setTimeout(() => resolve(), PHOTO_SWIPE_DELAY)),
            ]).then(([photoSwipe, PhotoSwipeDefault]) => {
                void this.getImages().then((imageConfig) => {
                    images.forEach((image, index) => {
                        image.onclick = () => {
                            const gallery = new photoSwipe.default(pswp, PhotoSwipeDefault.default, imageConfig, Object.assign(Object.assign({ shareButtons: this.locales.buttons }, PHOTO_SWIPE_OPTIONS), { index }));
                            gallery.init();
                        };
                    });
                });
            });
        },
        getImageInfo(image) {
            return {
                src: image.src,
                // eslint-disable-next-line id-length
                w: image.naturalWidth,
                h: image.naturalHeight,
                title: image.alt,
            };
        },
        getImages() {
            const promises = [];
            images =
                document.querySelectorAll(PHOTO_SWIPE_SELECTOR);
            images.forEach((image, index) => {
                promises[index] = new Promise((resolve, reject) => {
                    if (image.complete)
                        resolve(this.getImageInfo(image));
                    else {
                        image.onload = () => resolve(this.getImageInfo(image));
                        image.onerror = (err) => reject(err);
                    }
                });
            });
            return Promise.all(promises);
        },
    },
});
//# sourceMappingURL=PhotoSwipe.js.map